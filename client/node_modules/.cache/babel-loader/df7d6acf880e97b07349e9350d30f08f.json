{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport logger from \"redux-logger\";\nimport rootSaga from \"./root.sagas\";\nimport rootReducer from \"./root-reducer\";\nimport createSagaMiddleWare from \"redux-saga\"; //import { fetchCollectionsStart } from \"./shop/shop.sagas\";\n\nconst sagaMiddleWare = createSagaMiddleWare();\nconst middleWare = [sagaMiddleWare];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleWare.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWare));\nsagaMiddleWare.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["D:/python_co_ban/crwn-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootSaga","rootReducer","createSagaMiddleWare","sagaMiddleWare","middleWare","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;;AACA,MAAMC,cAAc,GAAGD,oBAAoB,EAA3C;AACA,MAAME,UAAU,GAAG,CAACD,cAAD,CAAnB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,EAAAA,UAAU,CAACI,IAAX,CAAgBT,MAAhB;AACD;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACK,WAAD,EAAcJ,eAAe,CAAC,GAAGO,UAAJ,CAA7B,CAAzB;AACPD,cAAc,CAACO,GAAf,CAAmBV,QAAnB;AACA,OAAO,MAAMW,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AACP,eAAe;AAAEA,EAAAA,KAAF;AAASE,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport logger from \"redux-logger\";\r\nimport rootSaga from \"./root.sagas\";\r\nimport rootReducer from \"./root-reducer\";\r\nimport createSagaMiddleWare from \"redux-saga\";\r\n//import { fetchCollectionsStart } from \"./shop/shop.sagas\";\r\nconst sagaMiddleWare = createSagaMiddleWare();\r\nconst middleWare = [sagaMiddleWare];\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  middleWare.push(logger);\r\n}\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(...middleWare));\r\nsagaMiddleWare.run(rootSaga);\r\nexport const persistor = persistStore(store);\r\nexport default { store, persistor };\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionFailure, fetchCollecionSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionAsync() {\n  yield console.log(\"hhehehe\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollecionSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["D:/python_co_ban/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionFailure","fetchCollecionSuccess","ShopActionTypes","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,sBAAT,EAAiCC,qBAAjC,QAA8D,gBAA9D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAN;;AACA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAC/BI,+BAD+B,EAE/BS,QAF+B,CAAjC;AAIA,UAAMZ,GAAG,CAACK,qBAAqB,CAACS,cAAD,CAAtB,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMf,GAAG,CAACI,sBAAsB,CAACW,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMnB,UAAU,CACdQ,eAAe,CAACY,uBADF,EAEdX,oBAFc,CAAhB;AAID;AAED,OAAO,UAAUY,SAAV,GAAsB;AAC3B,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,qBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\nimport { fetchCollectionFailure, fetchCollecionSuccess } from \"./shop.actions\";\r\nimport ShopActionTypes from \"./shop.types\";\r\n\r\nexport function* fetchCollectionAsync() {\r\n  yield console.log(\"hhehehe\");\r\n  try {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    const snapshot = yield collectionRef.get();\r\n    const collectionsMap = yield call(\r\n      convertCollectionsSnapshotToMap,\r\n      snapshot\r\n    );\r\n    yield put(fetchCollecionSuccess(collectionsMap));\r\n  } catch (error) {\r\n    yield put(fetchCollectionFailure(error.message));\r\n  }\r\n}\r\nexport function* fetchCollectionsStart() {\r\n  yield takeLatest(\r\n    ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    fetchCollectionAsync\r\n  );\r\n}\r\n\r\nexport function* shopSagas() {\r\n  yield all([call(fetchCollectionsStart)]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}